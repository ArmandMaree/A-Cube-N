The backend changes were focussed around two central ideas. Firstly optimizing everything. The backend will process polled data at the same rate at what it downloads this data. The database can then also match this speed when persisting this massive amounts of processed data. Since we do realize that there will be a point where so many users sign up that a bottleneck will occur at some point we have implemented a priority queuing system. In this design we prioritize the processing of new information that will allow a user to see at least some of their data in the mindmap rapidly after they signed up. The processing of user data is also sped up by the means of multi threading where a predefined number of threads process data concurrently.

The second backend change was the implentation of Facebook. Before we could properly implement Facebook we realized that even though we had very little coupling between the actual pollers there was still some coupling. We thus went ahead and completely decoupled the pollers from the rest of a system. It is now possible to write a poller for Twitter, LinkedIn or whatever other PIM you choose and simply start it up without the need to write a single line of code for the rest of the system to recognize the new poller and work with it. After this decoupling was done, it was time to implement Facebook. Should a user choose Facebook a source for where they want us to mine for information, our facebook poller will download all posts and comments of a user and send them for processing.
